{"version":3,"sources":["components/NoteCard.js","services/notes.js","config.js","pages/Notes.js","pages/Create.js","pages/NoteShare.js","pages/Search.js","pages/Trash.js","pages/Help.js","services/boxes","components/SlipboxCard","pages/Slipbox.js","pages/Database.js","components/Layout.js","App.js","index.js"],"names":["useStyles","makeStyles","avatar","backgroundColor","note","shared","yellow","green","NoteCard","handleDelete","handleShare","classes","Card","elevation","CardHeader","Avatar","className","category","toUpperCase","action","IconButton","onClick","id","title","subheader","CardContent","Typography","variant","color","details","baseUrl","axios","get","then","response","data","newObject","post","request","delete","console","log","noteplayground","Notes","useState","notes","setNotes","useEffect","noteService","initialNotes","find","n","changedNote","filter","catch","error","requestAccount","a","window","ethereum","method","shareNote","provider","ethers","providers","Web3Provider","signer","getSigner","contract","Contract","NotePlayground","abi","addNote","transaction","wait","getAllNotes","Container","size","component","gutterBottom","breakpointCols","default","columnClassName","map","field","marginTop","marginBottom","display","background","field2","Label","Create","useHistory","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","setCategory","noValidate","autoComplete","onSubmit","event","preventDefault","returnedNote","TextField","onChange","e","target","value","label","fullWidth","required","multiline","rows","FormControl","RadioGroup","FormControlLabel","control","Radio","Button","type","endIcon","NoteShare","allNotes","setAllNotes","Promise","all","i","detials","content","fetchNotes","Search","Trash","Help","Slipbox","DatabasePage","drawerWidth","theme","page","width","padding","spacing","root","drawer","MuiDrawer","drawerPaper","active","appBar","marginLeft","date","flexGrow","toolbar","mixins","Layout","children","history","location","useLocation","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","PeopleOutlined","AppBar","position","Toolbar","format","Date","src","Drawer","paper","anchor","List","item","ListItem","button","push","pathname","ListItemIcon","ListItemText","primary","createMuiTheme","palette","main","secondary","purple","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20dd9674.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\nimport Send from \"@material-ui/icons/Send\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { yellow, green, pink, blue } from \"@material-ui/core/colors\";\n\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: (note) => {\n      if (note.shared == true) {\n        return yellow[700];\n      } else {\n        return green[500];\n      }\n      // if (note.category == \"private\") {\n      //   return green[500];\n      // }\n      // if (note.category == \"todos\") {\n      //   return pink[500];\n      // }\n      // return blue[500];\n    },\n  },\n});\n\nexport default function NoteCard({ note, handleDelete, handleShare }) {\n  const classes = useStyles(note);\n\n  return (\n    <div>\n      <Card elevation={1}>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>\n              {note.category[0].toUpperCase()}\n            </Avatar>\n          }\n          action={\n            <div >\n              <IconButton onClick={() => handleDelete(note.id)}>\n                <DeleteOutlined />\n              </IconButton>\n              <IconButton onClick={() => handleShare(note.id)}>\n                <Send />\n              </IconButton>\n            </div>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {note.details}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteVal = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    console.log(\"Calling delete\")\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll, create, update, deleteVal\n}","export const noteplayground = '0x5FbDB2315678afecb367f032d93F642f64180aa3'","import React, { useEffect, useState } from 'react'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Masonry from 'react-masonry-css'\nimport NoteCard from '../components/NoteCard'\nimport noteService from '../services/notes'\nimport { ethers } from \"ethers\";\nimport { noteplayground } from \"../config\";\nimport NotePlayground from \"../artifacts/contracts/NotePlayground.sol/NotePlayground.json\";\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('')\n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n\n  const handleDelete = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = notes.filter(note => note.id !== id)\n\n    noteService\n      .deleteVal(id)\n      .then(() => {\n        setNotes(changedNote)\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n  };\n\n  async function requestAccount() {\n    await window.ethereum.request({ method: \"eth_requestAccounts\" });\n  }\n\n  const shareNote = async (id) => {\n    const note = notes.find(n => n.id === id)\n    if (note.shared) return\n    if (typeof window.ethereum !== \"undefined\") {\n      await requestAccount();\n      // const web3Modal = new Web3Modal()\n      // const conn = await web3Modal.connect()\n      // const provider = new ethers.providers.Web3Provider(conn)\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(noteplayground, NotePlayground.abi, signer);\n      const transaction = await contract.addNote(note.title, note.title, note.details);\n      await transaction.wait();\n      const notes = await contract.getAllNotes();\n      // await notes.wait()\n      console.log(notes);\n      // fetchNotes();\n      note.shared = true;\n    }\n  };\n\n  return (\n    <Container size=\"sm\">\n      <Typography\n        variant=\"h6\"\n        color=\"textSecondary\"\n        component=\"h2\"\n        gutterBottom\n      > let's get this bread</Typography >\n      <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\">\n        {notes.map(note => (\n          <div key={note.id}>\n            <NoteCard note={note} handleDelete={handleDelete} handleShare={shareNote} />\n          </div>\n        ))}\n      </Masonry>\n    </Container>\n  )\n}\n","import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport { makeStyles } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { useHistory } from 'react-router-dom'\nimport noteService from '../services/notes'\n\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block',\n    background: \"#f9f9f9\"\n  },\n  field2: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block',\n  },\n  Label: {\n    color: \"#000000\"\n  }\n})\n\nexport default function Create() {\n  const classes = useStyles()\n  const history = useHistory()\n  const [title, setTitle] = useState('')\n  const [details, setDetails] = useState('')\n  const [titleError, setTitleError] = useState(false)\n  const [detailsError, setDetailsError] = useState(false)\n  const [category, setCategory] = useState('money')\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('')\n\n  const addNote = (event) => {\n    event.preventDefault()\n    setTitleError(false)\n    setDetailsError(false)\n\n    if (title == '') {\n      setTitleError(true)\n    }\n    if (details == '') {\n      setDetailsError(true)\n    }\n\n    const noteObject = {\n      title: title,\n      details: details,\n      category: category,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        console.log(\"submitted\")\n      })\n  }\n\n\n  return (\n    <Container size=\"sm\">\n      <Typography\n        variant=\"h6\"\n        color=\"textSecondary\"\n        component=\"h2\"\n        gutterBottom\n      >\n        let's create a new note\n      </Typography>\n\n      <form noValidate autoComplete=\"off\" onSubmit={addNote}>\n        <TextField className={classes.field}\n          onChange={(e) => setTitle(e.target.value)}\n          label=\"note title\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          error={titleError}\n        />\n        <TextField className={classes.field}\n          onChange={(e) => setDetails(e.target.value)}\n          label=\"details\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          rows={4}\n          fullWidth\n          required\n          error={detailsError}\n        />\n\n        {/* <Radio value=\"hello\" />\n        <Radio value=\"goodbye\" /> */}\n\n        <FormControl className={classes.field2}>\n          <Typography color='textSecondary' >note category</Typography>\n          <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"money\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"todos\" />\n            <FormControlLabel value=\"reminders\" control={<Radio />} label=\"reminders\" />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"work\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Button\n          type=\"submit\"\n          color=\"secondary\"\n          variant=\"contained\"\n          endIcon={<KeyboardArrowRightIcon />}>\n          submit\n        </Button>\n      </form>\n\n\n    </Container>\n  )\n}\n","import { useState, useEffect } from \"react\";\n// import Card from \"react-bootstrap/Card\";\nimport { ethers } from \"ethers\";\nimport { noteplayground } from \"../config\";\nimport NotePlayground from \"../artifacts/contracts/NotePlayground.sol/NotePlayground.json\";\nimport Container from '@material-ui/core/Container'\nimport Masonry from 'react-masonry-css'\nimport NoteCard from '../components/NoteCard'\nimport noteService from '../services/notes'\n\nfunction NoteShare() {\n  const [title, setTitle] = useState();\n  const [src, setSrc] = useState();\n  const [content, setContent] = useState();\n  const [allNotes, setAllNotes] = useState([]);\n\n  useEffect(() => {\n    fetchNotes()\n  }, [])\n\n  // request access to the user's MetaMask account\n  async function requestAccount() {\n    await window.ethereum.request({ method: \"eth_requestAccounts\" });\n  }\n\n  async function fetchNotes() {\n      console.log('fetch all')\n    if (typeof window.ethereum !== \"undefined\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      // const provider = ethers.getDefaultProvider(ethers.providers.getNetwork(80001), 'https://polygon-mumbai.infura.io/v3/e398d302dbb741238eba9fa73c5b9f05')\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(noteplayground, NotePlayground.abi, signer);\n      console.log(contract);\n      try {\n        // const data = []\n        // const test = await contract.test();\n        // console.log(test)\n        const data = await contract.getAllNotes();\n        console.log(data);\n\n        const notes = await Promise.all(\n          data.map(async (i) => {\n            return {\n              category: \"work\",\n              title: i.title,\n              detials: i.content,\n              id: i.id\n            };\n          })\n        );\n        console.log(notes);\n        setAllNotes(notes);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function shareNote() {\n    console.log(title);\n    if (!content) return;\n    if (typeof window.ethereum !== \"undefined\") {\n      await requestAccount();\n      // const web3Modal = new Web3Modal()\n      // const conn = await web3Modal.connect()\n      // const provider = new ethers.providers.Web3Provider(conn)\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(noteplayground, NotePlayground.abi, signer);\n      const transaction = await contract.addNote(src, title, content);\n      await transaction.wait();\n      const notes = await contract.getAllNotes();\n      // await notes.wait()\n      console.log(notes);\n      // fetchNotes();\n    }\n  };\n  const handleDelete = id => {\n      console.log(id)\n  }\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n  };\n  return (\n    <Container>\n    <Masonry\n      breakpointCols={breakpoints}\n      className=\"my-masonry-grid\"\n      columnClassName=\"my-masonry-grid_column\">\n      {allNotes.map(note => (\n        <div key={note.id}>\n          <NoteCard note={note} handleDelete={handleDelete} handleShare={handleDelete}/>\n        </div>\n      ))}\n    </Masonry>\n  </Container>\n  );\n}\nexport default NoteShare;\n","import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport { makeStyles } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { useHistory } from 'react-router-dom'\nimport noteService from '../services/notes'\n\nconst useStyles = makeStyles({\n\n})\n\nexport default function Search() {\n    return (\n        <Container size=\"sm\">\n            <Typography\n                variant=\"h6\"\n                color=\"textSecondary\"\n                component=\"h2\"\n                gutterBottom\n            >\n                what would you like to find?\n            </Typography>\n\n\n\n        </Container>\n    )\n}\n","import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport { makeStyles } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { useHistory } from 'react-router-dom'\nimport noteService from '../services/notes'\n\n\nconst useStyles = makeStyles({\n\n})\n\n\nexport default function Trash() {\n\n    return (\n        <Container size=\"sm\">\n            <Typography\n                variant=\"h6\"\n                color=\"textSecondary\"\n                component=\"h2\"\n                gutterBottom\n            >\n                trash\n            </Typography>\n\n\n\n        </Container>\n    )\n}\n","import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport { makeStyles } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { useHistory } from 'react-router-dom'\nimport noteService from '../services/notes'\n\nconst useStyles = makeStyles({\n\n})\n\nexport default function Help() {\n    return (\n        <Container size=\"sm\">\n            <Typography\n                variant=\"h6\"\n                color=\"textSecondary\"\n                component=\"h2\"\n                gutterBottom\n            >\n                need some help?\n            </Typography>\n\n\n\n        </Container>\n    )\n\n}\n","export default __webpack_public_path__ + \"static/media/boxes.7bf995b7.bin\";","export default __webpack_public_path__ + \"static/media/SlipboxCard.9ba42fc2.bin\";","import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport { makeStyles } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { useHistory } from 'react-router-dom'\nimport boxService from '../services/boxes'\nimport Masonry from 'react-masonry-css'\nimport SlipBoxCard from '../components/SlipboxCard'\n\n\nconst useStyles = makeStyles({\n\n})\n\nexport default function Slipbox() {\n\n    // const [slipboxes, setSlipboxes] = useState([])\n\n    // setSlipboxes([\n    //     { name: \"Big box\" },\n    //     { name: \"Medium Box\" },\n    //     { name: \"Small Box\" }\n    // ])\n\n    // const breakpoints = {\n    //     default: 3,\n    //     1100: 2,\n    //     700: 1\n    // };\n\n    // const handleDelete = id => {\n    //     const slipbox = slipboxes.find(n => n.id === id)\n    //     const changedNote = slipboxes.filter(note => note.id !== id)\n\n    //     boxService\n    //         .deleteVal(id)\n    //         .then(() => {\n    //             setSlipboxes(changedNote)\n    //         })\n    //         .catch(error => {\n    //             console.error(error);\n    //         })\n    // }\n\n    return (\n        <Container size=\"sm\">\n            {/* <Typography\n                variant=\"h6\"\n                color=\"textSecondary\"\n                component=\"h2\"\n                gutterBottom\n            >\n                your slipboxes\n            </Typography>\n            <Masonry\n                breakpointCols={breakpoints}\n                className=\"my-masonry-grid\"\n                columnClassName=\"my-masonry-grid_column\">\n                {slipboxes.map(box => (\n                    <div key={box.id}>\n                        <SlipBoxCard box={box} handleDelete={handleDelete} />\n                    </div>\n                ))}\n            </Masonry>\n\n */}\n\n        </Container>\n    )\n\n}\n","import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport { makeStyles } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { useHistory } from 'react-router-dom'\nimport noteService from '../services/notes'\nimport Masonry from 'react-masonry-css'\n\n\nconst useStyles = makeStyles({\n\n})\n\nexport default function DatabasePage() {\n    return (\n        <Container size=\"sm\"></Container>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport Drawer from '@material-ui/core/Drawer'\nimport Typography from '@material-ui/core/Typography'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { AddCircleOutlineOutlined, SubjectOutlined, PeopleOutlined } from '@material-ui/icons'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport SearchIcon from '@mui/icons-material/Search';\nimport StickyNote2Icon from '@mui/icons-material/StickyNote2';\nimport CloudIcon from '@mui/icons-material/Cloud';\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { format } from 'date-fns'\nimport Avatar from '@material-ui/core/Avatar'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    page: {\n      background: '#EDDDD4',\n      width: '100%',\n      padding: theme.spacing(3),\n    },\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      width: drawerWidth,\n    },\n    MuiDrawer: {\n      backgroundColor: \"#E4C5AF\"\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      backgroundColor: \"#E4C5AF\"\n\n    },\n    active: {\n      background: '#EDDDD4'\n    },\n    title: {\n      padding: theme.spacing(2),\n    },\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    date: {\n      flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n    avatar: {\n      marginLeft: theme.spacing(2)\n    }\n  }\n})\n\nexport default function Layout({ children }) {\n  const classes = useStyles()\n  const history = useHistory()\n  const location = useLocation()\n\n  const menuItems = [\n    {\n      text: 'my notes',\n      icon: <SubjectOutlined color=\"secondary\" />,\n      path: '/'\n    },\n    {\n      text: 'search',\n      icon: <SearchIcon color=\"secondary\" />,\n      path: '/search'\n    },\n    {\n      text: 'create note',\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\n      path: '/create'\n    },\n    {\n      text: 'Shared Notes',\n      icon: <PeopleOutlined color=\"secondary\" />,\n      path: '/share'\n    },\n    {\n      text: 'Slipboxes',\n      icon: <StickyNote2Icon color=\"secondary\" />,\n      path: '/slipbox'\n    },\n    {\n      text: 'database',\n      icon: <CloudIcon color=\"secondary\" />,\n      path: '/database'\n    },\n    {\n      text: 'trash',\n      icon: <DeleteOutlineIcon color=\"secondary\" />,\n      path: '/trash'\n    },\n    {\n      text: 'help',\n      icon: <QuestionMarkIcon color=\"secondary\" />,\n      path: '/help'\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      {/* app bar */}\n      <AppBar\n        position=\"fixed\"\n        className={classes.appBar}\n        elevation={0}\n        color=\"primary\"\n      >\n        <Toolbar>\n          <Typography className={classes.date}>\n            today is {format(new Date(), 'MMMM do' + ', ' + 'Y')}. so happy you're here!\n          </Typography>\n          <Typography >username</Typography>\n          <Avatar className={classes.avatar} src=\"/mario-av.png\" />\n        </Toolbar>\n      </AppBar>\n\n      {/* side drawer */}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: classes.drawerPaper }}\n        anchor=\"left\"\n      >\n        <div>\n          <Typography variant=\"h5\" className={classes.title}>\n            slip box notes &nbsp;✏️\n          </Typography>\n        </div>\n\n        {/* links/list section */}\n        <List>\n          {menuItems.map((item) => (\n            <ListItem\n              button\n              key={item.text}\n              onClick={() => history.push(item.path)}\n              className={location.pathname == item.path ? classes.active : null}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n\n      </Drawer>\n\n      {/* main content */}\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        {children}\n      </div>\n    </div>\n  )\n}\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Notes from './pages/Notes'\nimport Create from './pages/Create'\nimport NoteShare from './pages/NoteShare'\nimport Search from './pages/Search'\nimport Trash from './pages/Trash'\nimport Help from './pages/Help'\nimport Slipbox from './pages/Slipbox'\nimport DatabasePage from './pages/Database'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core'\nimport { purple } from '@material-ui/core/colors'\nimport Layout from './components/Layout'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#E4C5AF'\n    },\n    secondary: purple\n  },\n  typography: {\n    fontFamily: 'Quicksand',\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n  }\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          <Switch>\n          <Route path=\"/share\">\n              <NoteShare />\n            </Route>\n            <Route exact path=\"/\">\n              <Notes />\n            </Route>\n            <Route path=\"/search\">\n              <Search />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            \n            <Route path=\"/slipbox\">\n              <Slipbox />\n            </Route>\n            <Route path=\"/database\">\n              <DatabasePage />\n            </Route>\n            <Route path=\"/trash\">\n              <Trash />\n            </Route>\n            <Route path=\"/help\">\n              <Help />\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}